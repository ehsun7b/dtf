package vida.phd.tfd.entity;

import java.util.HashMap;
import java.util.Objects;

/**
 * Malware class
 * @author ehsun7b
 */
public class Malware {

  /**
   * Family of this Malware 
   */
  private Family family;
  
  /**
   * Name of Malware which is the name of the file which malware has been loaded from
   */
  private final String name;
  
  /**
   * HashMap to keep all BasicBlocks of this Malware
   */
  private final HashMap<String, BasicBlock> basicBlocks;

  /**
   * Constructor which takes Malware name and the Family as the parameters
   * @param name
   * @param family 
   */
  public Malware(String name, Family family) {
    this.name = name;
    basicBlocks = new HashMap<>();
    this.family = family;
  }

  /**
   * 
   * @return name 
   */
  public String getName() {
    return name;
  }

  /**
   * Adds the given BasicBlock to the HashMap; if it is a new BasicBlock it will be added. <br/>But if it as already added, its count will get incremented.
   * @param code
   * @throws Exception 
   */
  public void addBasicBlock(String code) throws Exception {
    BasicBlock existingBB = basicBlocks.get(code);
    if (existingBB != null) {
      existingBB.incCound();
    } else {
      basicBlocks.put(code, new BasicBlock(code));
    }
  }

  /**
   * Comares the Malware with the given Malware based on their names.
   * @param obj
   * @return 
   */
  @Override
  public boolean equals(Object obj) {
    if (obj instanceof Malware) {
      Malware m = (Malware) obj;
      return m.name.equals(name);
    }
    
    return false;
  }

  /**
   * 
   * @return unique hash value
   */
  @Override
  public int hashCode() {
    int hash = Objects.hashCode(this.name);
    return hash;
  }

  /**
   * 
   * @return BasicBlocks
   */
  public HashMap<String, BasicBlock> getBasicBlocks() {
    return basicBlocks;
  }

  /**
   * String representation of the malware. Includes Malware name and Family name.
   * @return 
   */
  @Override
  public String toString() {
    return name + " (" + family.getName() + ")";
  }

  /**
   * 
   * @return family
   */
  public Family getFamily() {
    return family;
  }

  /**
   * 
   * @param family 
   */
  public void setFamily(Family family) {
    this.family = family;
  }
}
